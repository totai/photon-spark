(function () {
   var  counter_name, db, mongoose;
   mongoose = require('mongoose');
   counter_name = null;
   db = null;

   exports.loadExports_io_ID = function (database, id_string) {
      counter_name = 'io_counters';
      db = database;
      var schema = new mongoose.Schema({
         _id: String,
         SEQ: String,
         SEQ_num: Number,
         name: String,
         created: {type: Date, default: Date.now},
         updated: {type: Date}
      });
      var Thing = mongoose.model(counter_name, schema);
      Thing.create({
            _id: id_string,
            SEQ_num: 1075000100
         },
         function (error, success) {
            if (error) console.log("ID error : " + error);
            console.log("ID OK : " + success);
            return
         })
      return db.model(counter_name, schema);
   };

   exports.plugin = function (schema, options) {
      var Counter, model_name;
      if (!options.counterID) {
         throw new Error('Missing required parameter: counterID');
      }
      model_name = options.counterID.toLowerCase();
      Counter = db.model(counter_name);
      schema.add({
         SEQ: {
            type: String,
            unique: true
         }
      });
      return schema.pre('save', function (next) {
         var self,
            _this = this;
         self = this;
         if (!self.SEQ) {
            return Counter.collection.findAndModify({
               _id: model_name
            }, [], {
               $inc: {
                  SEQ_num: 1
               }
            }, {
               "new": true,
               upsert: true
            }, function (err, doc) {
               var count;
               count = doc.SEQ_num;
               if (err) {
                  return next(err);
               }
               self.SEQ = count.toString(32).toUpperCase();
               return next();

            });
         } else {
            return next();
         }
      });
   };

}).call(this);
