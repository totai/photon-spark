/**
 * Tools for exports.io projects
 * 'im_channel', 'im_group', 'im_private', , 'io_user'
 */

/*  Constants */
var moment = require('moment'),

  IM_CHANNEL = 'im_channel',
  IM_GROUP = 'im_group',
  IM_PRIVATE = 'im_private',
  MIN_SEQUENCE_COUNT = 1075080000;   // 1'075'000'000

var mongoose = require('mongoose');
var db = mongoose.connection;

console.log("io_exports -> Connection: " + db);

var Cat = mongoose.model('Cat', { name: String });

var kitty = new Cat({ name: 'Zildjian' });
kitty.save(function (err) {
  if (err)
    console.log('meow');
});

module.exports = {

  /*  Initialize a channel in io_counters */
  InitCounter: function (name) {
    var ret = db.io_counters.insert({
      _id: name,
      seq: MIN_SEQUENCE_COUNT,
      val: MIN_SEQUENCE_COUNT.toString(32).toUpperCase()
    });
    console.log("io_exports -> InitCounter: " + name);
  },

  /*  Increment a channel's sequence  */
  NextSequence: function (name) {
    var ret = db.io_counters.findAndModify(
      {
        query: {_id: name},
        update: ({
          $inc: {seq: 1},
          val: 'TEST1234'    //seq.toString(32).toUpperCase()
        }),
        new: true
      }
    );
    return ret.seq;
    console.log("io_exports -> NextSequence: " + name);
  },

  /*  Create random Colors for USERS  */
  randomColor: function (brightness) {
    function randomChannel(brightness) {
      var r = 255 - brightness;
      var n = 0 | ((Math.random() * r) + brightness);
      var s = n.toString(16);
      return (s.length == 1) ? '0' + s : s;
    }
    result = '#' + randomChannel(brightness) + randomChannel(brightness) + randomChannel(brightness);
    console.log("io_exports -> randomColor: " + result);
    return result;
  }
};
